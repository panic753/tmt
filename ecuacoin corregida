# TMT_V2_0_Ecuacion_Corregida.py
# =========================================================
# ESTE ES EL AXIOMA MATEMÁTICO IRREFUTABLE
# Sobrescribe inmediatamente la fórmula anterior en el repositorio.
# =========================================================

import numpy as np

# Constantes Fundamentales de la Teoría Masa-Temperatura (TMT)
m_0 = 1.0  # Masa nominal de la partícula (en el límite de alta T)
beta = 0.5 # Constante de Acoplamiento Disformal (Ω(T))

def Masa_Funcional_Temperatura(T_Absoluta, m_nominal=m_0, Beta=beta):
    """
    Calcula la masa funcional m(T) en base a la temperatura absoluta T.
    
    Esta función corrige la singularidad: m(T) -> 0 cuando T -> 0.
    """
    
    # -----------------------------------------------------------
    # ECUACIÓN DE LA MASA FUNCIONAL (CORREGIDA)
    # m(T) = m_0 * (T / (T + beta))
    # -----------------------------------------------------------
    
    # Garantiza que el denominador nunca sea cero, aunque la corrección lo previene.
    if T_Absoluta < 1e-18:
        return 0.0
    
    m_T = m_nominal * (T_Absoluta / (T_Absoluta + Beta))
    return m_T

# --- PRUEBAS DE COHERENCIA LÓGICA ---

# Prueba 1: Límite Frío (T -> 0)
T_Frio = 1e-10
m_frio = Masa_Funcional_Temperatura(T_Frio)
# Esperado: m(T) es casi cero (¡victoria sobre la singularidad!)

# Prueba 2: Límite Caliente (T >> beta)
T_Caliente = 100.0
m_caliente = Masa_Funcional_Temperatura(T_Caliente)
# Esperado: m(T) es casi m_0 (se comporta como la masa clásica)

print(f"Masa al Enfriar (T={T_Frio:.2e}): {m_frio:.2e} (Debe tender a 0)")
print(f"Masa al Calentar (T={T_Caliente:.2f}): {m_caliente:.2f} (Debe tender a {m_0})")

# La fórmula es lógicamente coherente y elimina la falla.
